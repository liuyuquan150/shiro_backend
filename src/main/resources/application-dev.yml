server:
  port: 80

logging:
  config: classpath:log4j2-dev.xml
  level:
    indi.ly.crush: trace
#    root: debug

spring:
  application:
    name: universal_tools
  config:
    import: custom/role.yml
  web:
    resources:
      static-locations: >
                          classpath:/MY-RESOURCES/,
                          classpath:/META-INF/resources/,
                          classpath:/resources/,
                          classpath:/static/,
                          classpath:/public/
  datasource:
    username: root
    password: crush
    url: >
            jdbc:mysql://localhost:3306/shiro_backend?
            useSSL=true&
            useUnicode=true&
            characterEncoding=UTF-8&
            useTimezone=true&
            serverTimezone=GMT%2B8&
            allowMultiQueries=true&
            rewriteBatchedStatements=true
  jpa:
    # spring.jpa.generate-ddl 属性与 spring.jpa.hibernate.ddl-auto 属性紧密相关,
    # 但后者提供了更细粒度的控制.
    #
    # 通常, spring.jpa.generate-ddl 与 ddl-auto 一起使用来提供对数据库结构自动生成的完全控制.
    # 例如, 将 generate-ddl 设置为 true 并将 ddl-auto 设置为 update 可以在开发过程中自动更新数据库结构,
    # 而无需手动处理SQL脚本.
    #
    # generate-ddl: 是否让 JPA 自动根据实体类生成数据库表结构.
    generate-ddl: true